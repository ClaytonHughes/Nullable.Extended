<UserControl x:Class="Nullable.Extended.Extension.Views.NullForgivingToolWindowView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:toms="urn:TomsToolbox"
             xmlns:dgx="urn:tom-englert.de/DataGridExtensions"
             xmlns:views="clr-namespace:Nullable.Extended.Extension.Views"
             xmlns:styles="urn:TomsToolbox.Wpf.Styles"
             xmlns:composition="urn:TomsToolbox.Composition"
             xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
             mc:Ignorable="d" d:DesignHeight="450" d:DesignWidth="800"
             d:DataContext="{d:DesignInstance views:NullForgivingToolWindowViewModel}">
  <UserControl.Resources>

    <styles:InvertGrayEffect x:Key="InvertGrayEffect" />

    <Style TargetType="Image" x:Key="ImageStyle">
      <Style.Triggers>
        <!-- ReSharper disable once Xaml.BindingWithContextNotResolved -->
        <DataTrigger Binding="{Binding IsDarkTheme, Source={composition:Import views:IThemeManager}}" Value="True">
          <Setter Property="Effect" Value="{StaticResource InvertGrayEffect}" />
        </DataTrigger>
      </Style.Triggers>
    </Style>

    <Style TargetType="Image" BasedOn="{StaticResource ImageStyle}">
      <Setter Property="Stretch" Value="None" />
    </Style>

    <Style TargetType="{x:Type Control}" x:Key="ToolbarCommandButtonStyle">
      <Style.Triggers>
        <Trigger Property="IsEnabled" Value="False">
          <Setter Property="Opacity" Value="0.5" />
        </Trigger>
      </Style.Triggers>
    </Style>

    <ControlTemplate TargetType="{x:Type ToolBar}" x:Key="ToolBarTemplate">
      <Grid Name="Grid" SnapsToDevicePixels="true">
        <Border x:Name="MainPanelBorder" Background="{TemplateBinding Control.Background}"
                BorderBrush="{TemplateBinding Control.BorderBrush}"
                BorderThickness="{TemplateBinding Control.BorderThickness}"
                Padding="{TemplateBinding Control.Padding}">
          <DockPanel>
            <ContentPresenter x:Name="ToolBarHeader" ContentSource="Header" HorizontalAlignment="Center"
                              VerticalAlignment="Center"
                              SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
            <ToolBarPanel x:Name="PART_ToolBarPanel" IsItemsHost="true" KeyboardNavigation.TabNavigation="Once"
                          SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
          </DockPanel>
        </Border>
      </Grid>
      <ControlTemplate.Triggers>
        <Trigger Property="UIElement.IsEnabled" Value="false">
          <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Control.Foreground" />
        </Trigger>
      </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="{x:Static dgx:DataGridFilter.ColumnHeaderSearchCheckBoxStyleKey}" TargetType="CheckBox">
      <Setter Property="IsThreeState" Value="True" />
      <Setter Property="Margin" Value="4,0,2,0" />
      <Setter Property="SnapsToDevicePixels" Value="True" />
      <Setter Property="FocusVisualStyle" Value="{x:Null}" />
      <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
      <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
      <Setter Property="HorizontalContentAlignment" Value="Left" />
      <Setter Property="VerticalContentAlignment" Value="Center" />
      <Setter Property="Padding" Value="0" />
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="CheckBox">
            <DockPanel Background="Transparent">
              <Border Width="13" Height="13" BorderThickness="1"
                    DockPanel.Dock="Left" SnapsToDevicePixels="True"
                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}">
                <Grid>
                  <Path x:Name="CheckMark" Stretch="Fill" Margin="1"
                      Data="M7,0 3,5 1,3 0,4 3,7 9,0 z"
                      Fill="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                      Visibility="Hidden" UseLayoutRounding="False" />
                  <Rectangle x:Name="IndeterminateCheckMark" Width="7" Height="7"
                           Visibility="Hidden"
                           Fill="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                  <Rectangle x:Name="FocusVisual" StrokeThickness="1" Visibility="Hidden"
                             Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                             StrokeDashArray="1 2" Margin="-3" SnapsToDevicePixels="True" />
                </Grid>
              </Border>
            </DockPanel>
            <ControlTemplate.Triggers>
              <Trigger Property="ContentControl.HasContent" Value="true">
                <Setter Property="Control.Padding" Value="4,1,0,0" />
              </Trigger>
              <MultiTrigger>
                <MultiTrigger.Conditions>
                  <Condition Property="IsMouseOver" Value="True" />
                  <Condition Property="IsEnabled" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HotTrackBrushKey}}" />
              </MultiTrigger>
              <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                  <Condition Binding="{Binding IsKeyboardFocused, RelativeSource={RelativeSource Self}}" Value="True" />
                  <Condition Binding="{Binding IsFocusVisualVisible, Source={x:Static toms:KeyboardNavigation.Current}}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Visibility" TargetName="FocusVisual" Value="Visible" />
              </MultiDataTrigger>
              <Trigger Property="IsPressed" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" />
              </Trigger>
              <Trigger Property="IsChecked" Value="True">
                <Setter TargetName="CheckMark" Property="Visibility" Value="Visible" />
              </Trigger>
              <Trigger Property="IsChecked" Value="{x:Null}">
                <Setter TargetName="IndeterminateCheckMark" Property="Visibility" Value="Visible" />
              </Trigger>
              <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{DynamicResource {x:Static styles:ResourceKeys.DisabledBrush}}" />
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
      <Style.Triggers>
        <Trigger Property="CheckBox.IsChecked" Value="{x:Null}">
          <Setter Property="Opacity" Value="0" />
        </Trigger>
        <Trigger Property="IsMouseOver" Value="True">
          <Setter Property="Opacity" Value="1" />
        </Trigger>
        <Trigger Property="IsFocused" Value="True">
          <Setter Property="Opacity" Value="1" />
        </Trigger>
      </Style.Triggers>
    </Style>

    <Style TargetType="ToolTip" BasedOn="{StaticResource {x:Static styles:ResourceKeys.ToolTipStyle}}" />

    <ControlTemplate x:Key="MultipleChoiceFilterTemplate">
      <dgx:MultipleChoiceFilter HasTextFilter="True" />
    </ControlTemplate>

  </UserControl.Resources>
  <Grid>
    <DockPanel KeyboardNavigation.TabNavigation="Cycle">
      <ToolBarTray DockPanel.Dock="Top"
                   KeyboardNavigation.TabIndex="1"
                   Background="{DynamicResource {x:Static SystemColors.MenuBarBrushKey}}">
        <ToolBar x:Name="ToolBar" Background="Transparent"
                 Template="{StaticResource ToolBarTemplate}">
          <Button Style="{StaticResource ToolbarCommandButtonStyle}"
                  Command="{Binding AnalyzeCommand}">
            <Button.ToolTip>
              <ToolTip>Refresh</ToolTip>
            </Button.ToolTip>
            <Image SnapsToDevicePixels="True" Source="/Nullable.Extended.Extension;component/Resources/refresh.png" />
          </Button>
          <Button Style="{StaticResource ToolbarCommandButtonStyle}"
                  Command="{Binding RemoveNotRequired}">
            <Button.ToolTip>
              <ToolTip>Remove all not required tokens</ToolTip>
            </Button.ToolTip>
            <Image SnapsToDevicePixels="True" Source="/Nullable.Extended.Extension;component/Resources/delete.png" />
          </Button>
        </ToolBar>
      </ToolBarTray>

      <DataGrid KeyboardNavigation.TabIndex="0"
                ItemsSource="{Binding AnalysisResults}"
                Style="{DynamicResource {x:Static styles:ResourceKeys.DataGridStyle}}"
                KeyboardNavigation.TabNavigation="Once"
                AutoGenerateColumns="False"
                HeadersVisibility="Column"
                IsReadOnly="True"
                IsKeyboardFocusWithinChanged="DataGrid_IsKeyboardFocusWithinChanged"
                dgx:Tools.ApplyInitialSorting="True"
                dgx:DataGridFilter.IsAutoFilterEnabled="True"
                dgx:Tools.TrackFocusedCell="True"
                dgx:DataGridFilter.StartFilteringKeyGesture="Ctrl+F"
                toms:ItemsControlExtensions.DefaultItemCommand="{Binding OpenDocumentCommand}">
        <DataGrid.Columns>
          <DataGridCheckBoxColumn Header="Required" Binding="{Binding IsRequired}" />
          <DataGridTextColumn Header="Context" Width="90" Binding="{Binding Context}"
                              dgx:DataGridFilterColumn.Template="{StaticResource MultipleChoiceFilterTemplate}" />
          <DataGridTextColumn Header="File" Width="3*" Binding="{Binding RelativeFilePath}" SortDirection="Ascending"
                              dgx:DataGridFilterColumn.Template="{StaticResource MultipleChoiceFilterTemplate}" />
          <DataGridTextColumn Header="Project" Width="*" Binding="{Binding ProjectName}"
                              dgx:DataGridFilterColumn.Template="{StaticResource MultipleChoiceFilterTemplate}" />
          <DataGridTextColumn Header="Line" Width="80" Binding="{Binding Line}" SortDirection="Descending" />
          <DataGridTextColumn Header="Column" Width="80" Binding="{Binding Column}" SortDirection="Descending" />
          <DataGridCheckBoxColumn Header="Justified" Width="80" Binding="{Binding IsJustified, Mode=OneWay}" />
          <DataGridTextColumn Header="Justification" Width="120" Binding="{Binding Justification}" />
        </DataGrid.Columns>
        <DataGrid.RowStyle>
          <Style TargetType="DataGridRow" BasedOn="{StaticResource {x:Static styles:ResourceKeys.DataGridRowStyle}}">
            <EventSetter Event="KeyDown" Handler="DataGridRow_OnKeyDown" />
            <Setter Property="ItemsPanel">
              <Setter.Value>
                <ItemsPanelTemplate>
                  <DataGridCellsPanel KeyboardNavigation.TabNavigation="Once" />
                </ItemsPanelTemplate>
              </Setter.Value>
            </Setter>
          </Style>
        </DataGrid.RowStyle>
        <b:Interaction.Behaviors>
          <dgx:ExtendedStarSizeBehavior />
        </b:Interaction.Behaviors>
      </DataGrid>
    </DockPanel>
    <toms:LoadingIndicator IsActive="{Binding AnalyzerViewModel.IsAnalyzing}" Header="Analyzing..." />
  </Grid>
</UserControl>